<ValueItem>:
    text_in: text_in
    slide_in: slide_in
    orientation: 'vertical'
    BoxLayout:
        orientation: 'horizontal'
        Label:
            text: root.label
        TextInput:
            id: text_in
            multiline: False
            input_filter: 'float'
            text: "{:.2f}".format(root.value + root.value_offset)
            on_text_validate: root.value = max(min(float(self.text) - root.value_offset, root.max), root.min)
    Slider:
        id: slide_in
        value: root.value if not root.reverse else (self.max - root.value + self.min )
        max: root.max
        min: root.min
        on_value: root.value = (self.value if not root.reverse else (self.max - self.value + self.min))

<Shell>:
    source: 'shell.png'
    size_hint: (None, None)
    size: (20, 10)
    canvas.before:
        PushMatrix
        Rotate:
            angle: self.angle
            origin: self.center
    canvas.after:
        PopMatrix


<GunBarrel>:
    source: 'gunbarrel.png'
    size_hint: self.b_size
    pos_hint: {'x': 0.5, 'center_y':0.5}
    canvas.before:
        PushMatrix
        Rotate:
            angle: self.angle
            origin: (self.x, self.center_y)
    canvas.after:
        PopMatrix

<TankBody>:
    source: 'tank.png'
    size_hint: (0.5, 0.5)
    pos_hint: {'center_x': 0.5, 'center_y':0.5}

<Tank>:
    body: body
    barrel: barrel
    size: (100, 100)
    size_hint: (None, None)
    TankBody:
        id: body
    GunBarrel:
        id: barrel

<Terrain>:

<Map>
    trace_display: trace_display
    terrain: terrain
    Terrain:
        id: terrain
        canvas:
            Rectangle:
                texture: self.background_image.texture
                pos: self.pos
                size: self.size
    TraceDisplay:
        id: trace_display
        size_hint: (1.0,1.0)
<Game>
    map: map
    power_in: power_in
    angle_in: angle_in
    wind_out: wind_out
    player_out: player_out
    fire_button: fire_button
    act_bar: act_bar
    BoxLayout:
        orientation: 'vertical'
        ActionBar:
            id: act_bar
            pos_hint: {'top': 1}
            size_hint: (1, None)
            size: (0, 70)
            ActionView:
                use_separator: True
                ActionPrevious:
                    title: ''
                    with_previous: False
                    app_icon: 'tank_icon.png'
                    on_press: root.exit_to_menu()
                ActionOverflow:
                ValueItem:
                    id: power_in
                    label: 'Power'
                    max: 100
                    min: 1
                    reverse: False
                ValueItem:
                    id: angle_in
                    label: 'Angle'
                    max: 270
                    min: -90
                    reverse: True
                    value_offset: -90
                ActionButton:
                    id: fire_button
                    text: 'Fire!'
                TextItem:
                    id: wind_out
                    text: 'No wind'
                TextItem:
                    id: player_out
                    text: 'No player'
        ScrollView:
            do_scroll_x: True
            do_scroll_y: True
            size_hint: (1, 1)
            Map:
                id: map
                size_hint: (None, None)
                pos_hint: {'center_x' : 0.5, 'center_y' : 0.5}
                size: (1000, 1000)

<MenuValueItem>:
    size_hint: (1, None)
    size: (0,40)
    orientation: 'horizontal'
    text_in: text_in
    slide_in: slide_in
    Label:
        text: root.label
    TextInput:
        id: text_in
        multiline: False
        halign: 'center'
        input_filter: root.input_filter
        text: "{:.2f}".format(root.value) if root.input_filter == 'float' else "{:d}".format(root.value)
        on_text_validate: root.value = max(min(float(self.text), root.max), root.min)
    Slider:
        id: slide_in
        value: root.value
        max: root.max
        min: root.min
        step: root.step
        on_value: root.value = self.value

<MenuPercentItem>:
    size_hint: (1, None)
    size: (0,40)
    orientation: 'horizontal'
    text_in: text_in
    slide_in: slide_in
    Label:
        text: root.label
    TextInput:
        id: text_in
        multiline: False
        halign: 'center'
        input_filter: 'float'
        text: "{:.2f}".format(root.value)
        on_text_validate: root.value = max(min(float(self.text), root.max), root.min)
    Slider:
        id: slide_in
        value: root.normalized_value
        max: 1
        min: 0
        on_value: root.normalized_value = self.value

<Menu>:
    num_players: num_players
    gravity_perc: gravity
    drag_perc: drag
    shell_vel_perc: shell_vel
    wind: wind
    explosion_r: explosion_r
    shell_mass_perc: shell_mass
    BoxLayout:
        orientation: 'vertical'
        Button:
            size_hint: (1,1)
            text: 'Start game'
            on_press: root.start_game()
        MenuValueItem:
            id: num_players
            input_filter: 'int'
            step: 1
            value: 2
            label: 'Number of players:'
            max: 8
            min: 2
        MenuPercentItem:
            id: gravity
            value: 100
            step: 0
            label: 'Gravity (%):'
            max: 1000
            min: 10
        MenuPercentItem:
            id: shell_vel
            value: 100
            label: 'Max shell muzzle velocity (%):'
            max: 1000
            min: 10
        MenuPercentItem:
            id: drag
            value: 100
            label: 'Drag (%):'
            max: 1000
            min: 0
        MenuValueItem:
            id: wind
            input_filter: 'float'
            value: 100
            step: 0
            label: 'Max wind strength:'
            max: 999
            min: 0
        MenuValueItem:
            id: explosion_r
            input_filter: 'int'
            value: 50
            step: 1
            label: 'Shell explosion radius:'
            max: 200
            min: 0
        MenuPercentItem:
            id: shell_mass
            value: 100
            label: 'Shell mass (%):'
            max: 1000
            min: 10

<VictoryEntry>:
    Label:
        size_hint: (0.2, 1)
        text: str(root.number)
    Label:
        size_hint: (0.6,1)
        text: root.name
    Label:
        size_hint: (0.2, 1)
        text: str(root.score)

<VictoryInput>:
    Label:
        size_hint: (0.2, 1)
        text: str(root.number)
    TextInput:
        size_hint: (0.6,1)
        text: 'anonymous'
        text_hint: 'enter your name'
        multiline: False
        on_text: root.name = self.text
    Label:
        size_hint: (0.2, 1)
        text: str(root.score)

<Victory>:
    contents: contents
    BoxLayout:
        id: contents
        orientation: 'vertical'